module uart_top(
	//input 
	input		sys_clk			,
	//input		sys_rst_n		,
	input		rs232_rx		,
	
	//output
	output		rs232_tx		
);
	//// define ////
	wire		[7:0]		po_data		;
	wire					tx_flag		;
	
	reg			[15:0]		rst_cnt		;
	reg						sys_rst_n	;
	
	
	//// main code ////
	always @(posedge sys_clk) begin
		if(rst_cnt == 16'd60000) begin
			rst_cnt <= 16'd64000		;
		end
		else begin
			rst_cnt <= rst_cnt + 1		;
		end
		else begin	
			rst_cnt <= rst_cnt			;
		end
	end
	
	always @(posedge sys_clk) begin
		if(rst_cnt == 16'd64000) begin
			sys_rst_n <= 1'b1;
		end
		else begin
			sys_rst_n <= 1'b0;
		end
	end
	
	//inst
	uart_rx		U_uart_rx(
			.sclk			(sys_clk)		,
			.s_rst_n		(sys_rst_n)		,
			
			.rs232_rx		(rs232_rx)		,
			
			.po_data		(po_data)		,
			
			.po_flag		(tx_flag)
	);
	
	uart_tx		U_uart_tx(
			.sclk			(sys_clk)		,
			.s_rst_n		(sys_rst_n)		,
			
			.tx_flag		(tx_flag)		,
			
			.tx_data		(po_data)		,
			
			.rs232_tx		(rs232_tx)		
	);
	
	
	
	
	
	
	


endmodule