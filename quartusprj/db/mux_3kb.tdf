--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_SIZE=2 LPM_WIDTH=19 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 13.0 cbx_lpm_mux 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 19 
SUBDESIGN mux_3kb
( 
	data[37..0]	:	input;
	result[18..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[18..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data522w[1..0]	: WIRE;
	w_data536w[1..0]	: WIRE;
	w_data548w[1..0]	: WIRE;
	w_data560w[1..0]	: WIRE;
	w_data572w[1..0]	: WIRE;
	w_data584w[1..0]	: WIRE;
	w_data596w[1..0]	: WIRE;
	w_data608w[1..0]	: WIRE;
	w_data620w[1..0]	: WIRE;
	w_data632w[1..0]	: WIRE;
	w_data644w[1..0]	: WIRE;
	w_data656w[1..0]	: WIRE;
	w_data668w[1..0]	: WIRE;
	w_data680w[1..0]	: WIRE;
	w_data692w[1..0]	: WIRE;
	w_data704w[1..0]	: WIRE;
	w_data716w[1..0]	: WIRE;
	w_data728w[1..0]	: WIRE;
	w_data740w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data740w[1..1]) # ((! sel_node[]) & w_data740w[0..0])), ((sel_node[] & w_data728w[1..1]) # ((! sel_node[]) & w_data728w[0..0])), ((sel_node[] & w_data716w[1..1]) # ((! sel_node[]) & w_data716w[0..0])), ((sel_node[] & w_data704w[1..1]) # ((! sel_node[]) & w_data704w[0..0])), ((sel_node[] & w_data692w[1..1]) # ((! sel_node[]) & w_data692w[0..0])), ((sel_node[] & w_data680w[1..1]) # ((! sel_node[]) & w_data680w[0..0])), ((sel_node[] & w_data668w[1..1]) # ((! sel_node[]) & w_data668w[0..0])), ((sel_node[] & w_data656w[1..1]) # ((! sel_node[]) & w_data656w[0..0])), ((sel_node[] & w_data644w[1..1]) # ((! sel_node[]) & w_data644w[0..0])), ((sel_node[] & w_data632w[1..1]) # ((! sel_node[]) & w_data632w[0..0])), ((sel_node[] & w_data620w[1..1]) # ((! sel_node[]) & w_data620w[0..0])), ((sel_node[] & w_data608w[1..1]) # ((! sel_node[]) & w_data608w[0..0])), ((sel_node[] & w_data596w[1..1]) # ((! sel_node[]) & w_data596w[0..0])), ((sel_node[] & w_data584w[1..1]) # ((! sel_node[]) & w_data584w[0..0])), ((sel_node[] & w_data572w[1..1]) # ((! sel_node[]) & w_data572w[0..0])), ((sel_node[] & w_data560w[1..1]) # ((! sel_node[]) & w_data560w[0..0])), ((sel_node[] & w_data548w[1..1]) # ((! sel_node[]) & w_data548w[0..0])), ((sel_node[] & w_data536w[1..1]) # ((! sel_node[]) & w_data536w[0..0])), ((sel_node[] & w_data522w[1..1]) # ((! sel_node[]) & w_data522w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data522w[] = ( data[19..19], data[0..0]);
	w_data536w[] = ( data[20..20], data[1..1]);
	w_data548w[] = ( data[21..21], data[2..2]);
	w_data560w[] = ( data[22..22], data[3..3]);
	w_data572w[] = ( data[23..23], data[4..4]);
	w_data584w[] = ( data[24..24], data[5..5]);
	w_data596w[] = ( data[25..25], data[6..6]);
	w_data608w[] = ( data[26..26], data[7..7]);
	w_data620w[] = ( data[27..27], data[8..8]);
	w_data632w[] = ( data[28..28], data[9..9]);
	w_data644w[] = ( data[29..29], data[10..10]);
	w_data656w[] = ( data[30..30], data[11..11]);
	w_data668w[] = ( data[31..31], data[12..12]);
	w_data680w[] = ( data[32..32], data[13..13]);
	w_data692w[] = ( data[33..33], data[14..14]);
	w_data704w[] = ( data[34..34], data[15..15]);
	w_data716w[] = ( data[35..35], data[16..16]);
	w_data728w[] = ( data[36..36], data[17..17]);
	w_data740w[] = ( data[37..37], data[18..18]);
END;
--VALID FILE
